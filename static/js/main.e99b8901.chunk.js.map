{"version":3,"sources":["api/users.ts","services/user.ts","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","TodoInfo","onSubmit","useState","title","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","completed","className","type","value","onChange","target","placeholder","disabled","map","TodoList","todos","todo","classNames","href","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e99b8901.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\n\nexport function getUserById(userId: number) {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/todo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (todo: Todo) => void;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <span>Title: </span>\n\n        <input\n          type=\"text\"\n          data-cy=\"titleInput\"\n          value={title}\n          onChange={handleTitleChange}\n          placeholder=\"Enter a title\"\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <span>User: </span>\n\n        <select\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map(user => (\n            <option value={user.id} key={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/todo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <article\n        data-id={todo.id}\n        className={classNames('TodoInfo', {\n          'TodoInfo--completed': todo.completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {todo.title}\n        </h2>\n\n        <a\n          className=\"UserInfo\"\n          href={`mailto:${todo.user?.email}`}\n        >\n          {todo.user?.name}\n        </a>\n      </article>\n    ))}\n  </section>\n);\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoInfo } from './components/TodoInfo';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/user';\nimport { Todo } from './types/todo';\n\nimport todosFromServer from './api/todos';\n\nconst initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nfunction getNewTodoId(todos: Todo[]) {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoInfo onSubmit={addTodo} />\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}